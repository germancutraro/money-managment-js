{"version":3,"sources":["src/js/elements.js","src/js/storage.js","src/js/utils.js","src/js/index.js"],"names":["incomeForm","document","getElementById","totalMoney","entryQuantity","itemForm","itemName","itemPrice","itemCategory","itemsContainer","getData","key","data","localStorage","getItem","JSON","parse","saveData","value","setItem","stringify","items","incomesList","template","totalPrices","itemsPrices","reduce","prev","current","Number","price","incomesPrices","income","structure","e","name","category","render","innerHTML","forEach","resetValues","UI","textContent","classList","add","remove","addEventListener","preventDefault","push","alert","trim"],"mappings":"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","file":"js.d818e0ef.map","sourceRoot":"..","sourcesContent":["// Entry money elements\r\nexport const incomeForm = document.getElementById('add-incomes');\r\nexport const totalMoney = document.getElementById('my-money');\r\nexport const entryQuantity = document.getElementById('income-quantity');\r\n// Item form elements\r\nexport const itemForm = document.getElementById('add-expenses');\r\nexport const itemName = document.getElementById('item-name');\r\nexport const itemPrice = document.getElementById('item-price');\r\nexport const itemCategory = document.getElementById('item-category');\r\nexport const itemsContainer = document.getElementById('items-container');\r\n\r\n\r\n","export const getData = key => {\r\n    let data = localStorage.getItem(key);\r\n    \r\n    return data ? JSON.parse(data) : null;\r\n}\r\n\r\nexport const saveData = (key, value) => {\r\n    return localStorage.setItem(key, JSON.stringify(value));\r\n}","import { getData, saveData } from './storage'; \r\nimport {\r\n  incomeForm,\r\n  totalMoney,\r\n  entryQuantity,\r\n  itemForm,\r\n  itemName,\r\n  itemPrice,\r\n  itemCategory,\r\n  itemsContainer\r\n} from \"./elements\";\r\n\r\nexport let items = (getData('items')) ? getData('items') : [];\r\nexport let incomesList = (getData('incomes')) ? getData('incomes') : [];\r\nlet template;\r\n\r\n\r\n\r\nexport const totalPrices = () => {\r\n  const itemsPrices = items.reduce((prev, current) => {\r\n    return Number(prev) + Number(current.price);\r\n  }, 0); \r\n  \r\n  const incomesPrices = incomesList.reduce((prev, current) => {\r\n    return Number(prev) + Number(current.income);\r\n  }, 0);\r\n    \r\n  return incomesPrices - itemsPrices;\r\n}\r\n\r\n\r\nexport const structure = e => {\r\n  return `<div class=\"item\">\r\n             <h2 class=\"item-price\"> $${e.price} </h2> \r\n             <p class=\"item-title\"> ${e.name}  </p>\r\n             <span class=\"item-category\">${e.category}</span>\r\n          </div>`;\r\n};\r\n\r\nexport const render = () => {\r\n  itemsContainer.innerHTML = \"\";\r\n  template = \"\";\r\n  items.forEach(e => {\r\n    template += structure(e);\r\n    itemsContainer.innerHTML = template;\r\n  });\r\n};\r\n\r\nexport const resetValues = () => {\r\n  itemName.value = \"\";\r\n  itemPrice.value = \"\";\r\n  itemCategory.value = \"Option 1\";\r\n};\r\n\r\nexport const UI = () => {\r\n  // Total money color\r\n  (totalMoney.textContent < 0) ? totalMoney.classList.add(\"alert\") : totalMoney.classList.remove(\"alert\");\r\n}","import {\r\n  incomeForm,\r\n  totalMoney,\r\n  entryQuantity,\r\n  itemForm,\r\n  itemName,\r\n  itemPrice,\r\n  itemCategory,\r\n  itemsContainer\r\n} from \"./elements\";\r\nimport { render, structure, UI, resetValues, items, incomesList, totalPrices } from './utils';\r\n\r\n// Import Local Storage functions\r\nimport { getData, saveData } from './storage';\r\n\r\ntotalMoney.textContent = totalPrices();\r\n// money entry\r\nincomeForm.addEventListener(\"submit\", e => {\r\n  e.preventDefault();\r\n  if (typeof Number(entryQuantity.value) === \"number\" && entryQuantity.value > 0) {\r\n    \r\n    UI();\r\n    incomesList.push({income: entryQuantity.value});\r\n    saveData('incomes', incomesList);\r\n    totalMoney.textContent = totalPrices();\r\n\r\n    entryQuantity.value = \"\";\r\n  } else {\r\n    alert(\"Enter a valid format!\")\r\n  }\r\n});\r\n\r\n\r\n(items) ? render() : null;\r\n\r\nitemForm.addEventListener(\"submit\", e => {\r\n  e.preventDefault();\r\n  if (itemName.value.trim() && itemPrice.value.trim()) {\r\n    items.push({\r\n      name: itemName.value,\r\n      price: itemPrice.value,\r\n      category: itemCategory.value\r\n    });\r\n    totalMoney.textContent = totalMoney.textContent - itemPrice.value;\r\n    render();\r\n    resetValues();\r\n    UI();\r\n  saveData('items', items);\r\n\r\n  }\r\n});\r\n\r\n\r\n"]}